declare module '@capacitor/core' {
  interface PluginRegistry {
    Haptics: HapticsPlugin;
  }
}

export interface HapticsPlugin {
  /**
   * Trigger a haptics "impact" feedback
   */
  impact(options?: HapticsImpactOptions): Promise<void>;
  /**
   * Trigger a haptics "notification" feedback
   */
  notification(options?: HapticsNotificationOptions): Promise<void>;
  /**
   * Vibrate the device
   */
  vibrate(options?: VibrateOptions): Promise<void>;
  /**
   * Trigger a selection started haptic hint
   */
  selectionStart(): Promise<void>;
  /**
   * Trigger a selection changed haptic hint. If a selection was
   * started already, this will cause the device to provide haptic
   * feedback
   */
  selectionChanged(): Promise<void>;
  /**
   * If selectionStart() was called, selectionEnd() ends the selection.
   * For example, call this when a user has lifted their finger from a control
   */
  selectionEnd(): Promise<void>;
}

export interface HapticsImpactOptions {
  /**
   * Impact Feedback Style
   * The mass of the objects in the collision simulated by a UIImpactFeedbackGenerator object.
   * https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle
   * Default value is HapticsImpactStyle.Heavy
   */
  style: HapticsImpactStyle;
}

export enum HapticsImpactStyle {
  /**
   * A collision between small, light user interface elements
   */
  Heavy = 'HEAVY',
  /**
   * A collision between moderately sized user interface elements
   */
  Medium = 'MEDIUM',
  /**
   * A collision between small, light user interface elements
   */
  Light = 'LIGHT',
}

export interface HapticsNotificationOptions {
  /**
   * Notification Feedback Type
   * The type of notification feedback generated by a UINotificationFeedbackGenerator object.
   * https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype
   * Default value is HapticsNotificationType.SUCCESS
   */
  type: HapticsNotificationType;
}

export enum HapticsNotificationType {
  /**
   * A notification feedback type indicating that a task has completed successfully
   */
  SUCCESS = 'SUCCESS',
  /**
   * A notification feedback type indicating that a task has produced a warning
   */
  WARNING = 'WARNING',
  /**
   * A notification feedback type indicating that a task has failed
   */
  ERROR = 'ERROR',
}

export interface VibrateOptions {
  /**
   * Android and Web only
   * duration of the vibration in milliseconds
   * default value is 300
   */
  duration: number;
}
