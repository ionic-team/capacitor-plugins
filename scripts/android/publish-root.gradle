// Create variables with empty default values
ext["signing.keyId"] = ''
ext["signing.key"] = ''
ext["signing.password"] = ''
ext["centralTokenUsername"] = ''
ext["centralTokenPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

File globalSecretPropsFile = file('../../scripts/android/local.properties')
File secretPropsFile = project.rootProject.file('local.properties')
if (globalSecretPropsFile.exists()) {
    // Read global local.properties file first if it exists (scripts/android/local.properties)
    Properties p = new Properties()
    new FileInputStream(globalSecretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value -> ext[name] = value }
} else if (secretPropsFile.exists()) {
    // Read plugin project specific local.properties file next if it exists
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value -> ext[name] = value }
} else {
    // Use system environment variables
    ext["centralTokenUsername"] = System.getenv('ANDROID_CENTRAL_USERNAME')
    ext["centralTokenPassword"] = System.getenv('ANDROID_CENTRAL_PASSWORD')
    ext["sonatypeStagingProfileId"] = System.getenv('ANDROID_SONATYPE_STAGING_PROFILE_ID')
    ext["signing.keyId"] = System.getenv('ANDROID_SIGNING_KEY_ID')
    ext["signing.key"] = System.getenv('ANDROID_SIGNING_KEY')
    ext["signing.password"] = System.getenv('ANDROID_SIGNING_PASSWORD')
}

// Set up Sonatype repository
nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = sonatypeStagingProfileId
            username = centralTokenUsername
            password = centralTokenPassword
            nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
            snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))
        }
    }
    repositoryDescription = 'Capacitor Android ' + System.getenv('PLUGIN_NAME') + ' plugin v' + System.getenv('PLUGIN_VERSION')
}